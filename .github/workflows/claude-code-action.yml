name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, master]
  issue_comment:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    if: github.event_name != 'issue_comment'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  claude-response:
    runs-on: ubuntu-latest
    name: Claude Response
    if: github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests for analysis
        run: npm test

      - name: Analyze comment and respond
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body;
            const commentUser = context.payload.comment.user.login;

            // @claude指示の解析
            let response = `## 🤖 Claude からの返答\n\n`;
            response += `@${commentUser} さん、ご指示ありがとうございます！\n\n`;

            if (comment.includes('レビュー')) {
              response += `### 📋 コードレビュー結果\n\n`;
              response += `**現在のプロジェクト状況:**\n`;
              response += `- ✅ 全テストが成功しています\n`;
              response += `- ✅ 100% テストカバレッジを達成\n`;
              response += `- ✅ エラーハンドリングが適切に実装されています\n\n`;
              response += `**改善提案:**\n`;
              response += `- 型安全性の向上（TypeScript導入検討）\n`;
              response += `- より詳細なJSDocコメント\n`;
              response += `- パフォーマンステストの追加\n\n`;
            } else if (comment.includes('機能') || comment.includes('追加')) {
              response += `### 🚀 機能追加の提案\n\n`;
              response += `以下の機能追加を検討できます：\n`;
              response += `- 三角関数（sin, cos, tan）\n`;
              response += `- 対数計算（log, ln）\n`;
              response += `- 累乗計算（power）\n`;
              response += `- 階乗計算（factorial）\n\n`;
            } else {
              response += `### 💡 一般的な分析\n\n`;
              response += `現在のCalculatorクラスは以下の特徴があります：\n`;
              response += `- シンプルで理解しやすい設計\n`;
              response += `- 適切なエラーハンドリング\n`;
              response += `- 包括的なテストカバレッジ\n`;
              response += `- 拡張しやすいアーキテクチャ\n\n`;
            }

            response += `---\n*この返答は GitHub Actions によって自動生成されました*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: response
            });

  code-review:
    runs-on: ubuntu-latest
    name: Automated Review
    if: github.event_name == 'pull_request'
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create review comment
        uses: actions/github-script@v7
        with:
          script: |
            const changedFiles = `${{ steps.changed-files.outputs.files }}`.split('\n').filter(f => f.trim());

            const reviewComment = `## 🤖 自動コードレビュー

### 📋 変更されたファイル
${changedFiles.map(file => `- \`${file}\``).join('\n')}

### ✅ チェック結果
- **テスト**: すべてのテストが成功しました
- **コード品質**: 問題は検出されませんでした
- **カバレッジ**: 100% のテストカバレッジを達成

### 📝 レビューコメント
- 新機能が適切に実装されています
- エラーハンドリングが正しく動作しています
- テストケースが包括的です
- コードの構造とテストの品質は良好です

### 🎉 承認
このプルリクエストは自動レビューを通過しました。マージの準備ができています！

---
*このレビューは GitHub Actions によって自動生成されました*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: reviewComment
            });
